import streamlit as st
from google_auth_oauthlib.flow import Flow
from google.oauth2.credentials import Credentials
from googleapiclient.discovery import build
from urllib.parse import urlencode
from manage_google_files import *



if "session_mode" not in st.session_state:
    st.session_state["session_mode"] = "main"

# Session state to manage visibility of panes
if "show_left_pane" not in st.session_state:
    st.session_state["show_left_pane"] = True
if "show_right_pane" not in st.session_state:
    st.session_state["show_right_pane"] = True

# Left Sidebar (Navigation)
with st.sidebar:
    st.title("Left Pane")
    if authenticate_user():
        browse_google_drive()
    if st.button("Toggle Left Pane"):
        st.session_state["show_left_pane"] = not st.session_state["show_left_pane"]

# Layout with three columns
col1, col2, col3 = st.columns([1, 3, 1])

# Left Pane
if st.session_state["show_left_pane"]:
    with col1:
        st.header("Left Pane")
        st.button("Nav Button 1", type="primary")
        st.button("Nav Button 2", type="secondary")
        st.button("Nav Button 3", type="tertiary")
else:
    col1.empty()

# Main Content Pane

##### This is the function we're going to copy from for the program.
##### If it's working right, it should show the contents of the root folder in gdrive, and allow browsing download
##### All the folder management is implemented in manage_google_files. Maybe edit that?
with col2:
    st.header("Main Content")
    st.write("This is the main content area.")
    if "gdrive_files" in st.session_state:
        for file_name, file_contents in st.session_state["gdrive_files"].items():
            col1, col2 = st.columns([4, 1])
            with col1:
                st.write(f"File '{file_name}' downloaded successfully!")
            with col2:
                if st.button("Remove", key=f"remove_{file_name}"):
                    st.session_state["gdrive_files"].pop(file_name) #if we want to ignore key errors here, we can add a second parameter: pop(file_name, None)
                    st.rerun()

# Right Pane
if st.session_state["show_right_pane"]:
    with col3:
        st.header("Right Pane")
        st.button("Option 1")
        st.button("Option 2")
else:
    col3.empty()

# Footer toggle button for right pane
if st.button("Toggle Right Pane", key="toggle_right_pane"):
    st.session_state["show_right_pane"] = not st.session_state["show_right_pane"]


#Feature Planning:
# MAIN Mode
# - sidebar: google drive files
# - page title: currently selected topic
# - Main content: alternating file content and control buttons for this topic and newly opened files
#   = control button area: 
#       _ +/- to rearrange page
#       _ "send to topic" dropdown list
#       _ button to split file contents so as to independently assign sections to topics
#       _ "publish topic" button, to combine all the contents of the topic into one file
# - right-pane (below main content on phone): 
#   = tiered/ordered 'topic' list 
#   = "no-topic" button to set the current topic to none?
#   = "new topic" button to make a new topic? (maybe just do this at "send-to-topic")
#   = a button to select the output file? (maybe just output to a file named for the current topic)
# 
# Bible DB Mode
# - sidebar: 
#   = book/verse tree showing only books/verses with tags/notes
#   = dropdown list for tags
#   = button to change the dropdown list sorting method (alphabet or grouped usage)
# - page title: current selection or "make a selection" or "open a bible db"
# - main content: notes and verse references for the current selection, and a "send-to-topic" button
# - right-pane: list of topics, &c&c&c
#
# Bible Tagger Mode
# - sidebar:
#   = book/chapter tree enabling expanding and contracting books
# - page title: currently selected chapter
# - main content: the verses. Select a verse and shift-select
#
# Functionality summary
# - creates a working directory inside the google drive for output
# - when a topic is created, a subfolder is made for it.
# - in main mode, select files or blocks of text from the files, and assign them to topics.
# - in Bible db mode, info about tags or verses can be selected and assigned to a topic. 
#   a blurb describing the info will be autogenerated for use in main mode.
# - when something is assigned to a topic, it is moved to the subfolder for that topic, 
#   and named with its source data
# - when a topic is "published", a text file is generated with all the outputs for that topic, 
#   and some keywords to clue where images should sit &c
